name: Docker Release to GHCR

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # Trigger on version tags like v1.0.0

permissions:
  contents: read # To checkout the code
  packages: write # To push Docker images to GHCR

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
          # For tags like v1.2.3, this will generate:
          # - ghcr.io/owner/repo:latest (if it's the latest git tag)
          # - ghcr.io/owner/repo:v1.2.3
          # - ghcr.io/owner/repo:1.2.3
          # - ghcr.io/owner/repo:1.2
          # - ghcr.io/owner/repo:1
          # We can customize this further if needed.
          # Example: type=semver,pattern={{version}} will give 1.2.3
          # type=semver,pattern={{major}}.{{minor}} will give 1.2
          # type=semver,pattern={{major}} will give 1
          # type=edge (for default branch, not applicable here for tags)
          # type=ref,event=tag for the git tag itself (v1.2.3)

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
